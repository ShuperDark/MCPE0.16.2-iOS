////////////////////////////////////////
//List of functions in the iOS version//
// of Minecraft Pocket Edition v0.16.2//
//		Created by DarkShuper //
////////////////////////////////////////

0x100108428(0x8505e4)
GuiData::addMessage

0x10010881c(0x850d7c)
GuiData::displayChatMessage

0x100108794(0x850c80)
GuiData::displayClientMessage

0x100108fa4(0x851a18)
GuiData::showTipMessage

0x100108988(0x851038)
GuiData::displayWhisperMessage

0x100109b40(0x8523a0)
GuiData::postError

0x10049816c(0xcdaf94)
I18n::get std::string const&

0x1004980e0(0xcdaea4)
I18n::get std::string const&, std::vector<std::string, std::allocator<std::string> > const&

0x1008528fc(0x10d32a0)
Dimmension::getTimeOfDay

0x1007a5de4(0x10d995c)
Level::isDayCycleActive

0x1008e2eec(0x117d26a)
LevelData::getStopTime

0x1007a6db0(0x10da826)
Level::getTime

0x1007a6d38(0x10da7ca)
Level::setTime//Maybe not

0x1007a74d4(0x10db032)
Level::getLevelData

0x1008e2eec(0x117d26a)
LevelData::getStopTime

0x1008e2f0c(0x117d286)
Level::clearLoadedPlayerTag

0x100757b60(0x102ee48)
ItemInstance::getAuxValue

0x100757b68(0x102ee4e)
ItemInstance::operator=

0x1007579f0(0x102ed28)
ItemInstance::useAsFuel

0x100658034(0xf22dd4)
Entity::getRegion

0x100107fc4(0x850104)
GuiData::tick

0x1000855a8(0x7b6ae2)
MinecraftClient::getFont

0x10007ba50(0x7a942c)
MinecraftClient::onResourcesLoaded

0x1000832b8(0x7b43d0)
MinecraftClient::onPlayerLoaded

0x1007aa610(0x10ddd86)
Level::isClientSide

0x100722000(0xfae9dc)
SurvivalMode::tick

0x10072192c(0xfae68a)
GameMode::tick

0x100774f40(0xfd1390)
Recipes::init

0x10012eb58(0x102df0c)
ItemInstance::ItemInstance()

0x1007569a4(0x102e2e4)
ItemInstance::ItemInstance(Item const*, int);

0x10075684c(0x102e1bc)
ItemInstance::ItemInstance(Block const*, int, int);

0x1007567b0(0x102e13c)
ItemInstance::ItemInstance(Block const*, int);

0x100781794(0xfe5604)
Recipes::addShapedRecipe(ItemInstance const&, std::string const&, std::vector<Recipes::Type, std::allocator<Recipes::Type> > const&);

0x100781ca0(0xfe5b80)
Recipes::addShapedRecipe(ItemInstance const&, std::string const&, std::string const&, std::vector<Recipes::Type, std::allocator<Recipes::Type> > const&);

0x100781d74(0xfe5ca8)
Recipes::addShapedRecipe(ItemInstance const&, std::string const&, std::string const&, std::string const&, std::vector<Recipes::Type, std::allocator<Recipes::Type> > const&);

0x10078308c(0xfe7a54)
Recipes::addShapedRecipe(ItemInstance const&, std::vector<std::string, std::allocator<std::string> > const&, std::vector<Recipes::Type, std::allocator<Recipes::Type> > const&);

0x100782a74(0xfe73c0)
Recipes::addShapedRecipe(std::vector<ItemInstance, std::allocator<ItemInstance> > const&, std::vector<std::string, std::allocator<std::string> > const&, std::vector<Recipes::Type, std::allocator<Recipes::Type> > const&);

0x1007818a0(0xfe5784)
Recipes::addShapelessRecipe(ItemInstance const&, std::vector<Recipes::Type, std::allocator<Recipes::Type> > const&);

0x1007717d8(0xfce0d6)
FurnaceRecipes::getResult

0x1007168f8(0xf9fb7c)
PlayerInventoryProxy::getSelectedItem

0x100713a28
Player::canUseCarriedItemWhileMoving

0x1007138f0(0xf9cfac)
Player::isHiddenFrom

0x100713ab8(0xf9d0dc)
Player::_addLevels

0x100713c94(0xf9d280)
Player::sendInventory

0x1007144c8(0xf9d868)
Player::tickWorld

0x1007125e4(0xf9c088)
Player::attack

0x1007120e0(0xf9bcb0)
Player::hurt

0x100713a0c(0xf9d06a)
Player::hasResource//Maybe not

0x10035c584(0xb02410)
LocalPlayer::playSynchronizedSound

0x10065965c(0xf24418)
Entity::playSound

0x10035caac(0xb026dc)
EntityEventPacket::read

0x10070ec64(0xf97014)
Player::normalTick

0x10065b088(0xf25d60)
Entity::tick

0x10035eba4(0xb03446)
Player::displayLocalizebleMessage

0x10035eba8(0xb03448)
Player::displayWhisperMessage

0x100746be0(0x10219a0)
Item::useOn

0x100746b5c(0x1021958)
Item::use

0x100746b04(0x102191e)
Item::setIcon(TextureUVCoordinateSet const&)
0x100746b0c(0x1021924)
Item::setIcon(std::string const&, int)

0x100746a88(0x10218cc)
Item::setMaxStackSize

0x1007a6db8(0x10da82c)
Level::_backgroundTickSeasons

0x10070f5cc(0xf979bc)
Player::getInventory

0x100656278(0xf2137a)
Entity::getLevel
0x100657df8(0xf22c4e)
Entity::getLevel() const

0x10070dfe0(0xf96594)
Player::prepareRegion

0x1006a5e04(0xf7ff50)
Mob::spawnEatParticle

0x1006a6110(0xf801f4)
Mob::setSpeed

0x1012ae238(0x1c7fde0)
Item::mItems

0x10074689c(0x1021650)
Item::Item(std::string const&, short)

0x1007281e0(0xfc35c8)
BlockItem::BlockItem(std::string const&, int)

0x10074242c(0x1016870)
Item::initClientData

0x1007421e0(0x1016368)
Item::initServerData

0x100734d00(0x100a0a4)
Item::initCreativeItems

0x100745f6c(0x101ef28)
Item::addBlockItems

0x100746dd0(0x1021ace)
Item::setCategory

0x100726a44(0xfc1e30)
Item::setIsGlint

0x100745f10(0x101ee00)
Item::addCreativeItem(ItemInstance const&)  //Maybe there is no addCreativeItem whose argument is not "ItemInstance const&".

0x100746ed0(0x1021b60)
Item::buildDescriptionName

0x100747974(0x10228a0)
Item::setStackedByData

0x10074797c(0x10228a6)
Item::setMaxDamage

0x100747984(0x10228ac)
Item::getTextureUVCoordinateSet

0x100759748(0x10309d8)
ItemInstance::getIcon

0x1007d7dc8(0x1069180)
Block::Block(std::string const&, int, Material const&)

0x1012d1860(0x1c82f78)
Block::mBlocks

0x1007d8980(0x1069e44)
Block::clip(BlockSource&, BlockPos const&, Vec3 const&, Vec3 const&, bool, int)
0x1007d824c(0x106968c)
Block::clip(BlockSource&, BlockPos const&, Vec3 const&, Vec3 const&, bool, int, AABB const&)

0x1007d8a20(0x1069e90)
Block::spawnResources

0x1007d8118(0x1069584)
Block::getMaterial

0x1007d81d0(0x1069630)
Block::getDestroyProgress

0x1007d8184(0x10695fc)
Block::init

0x1007d451c(0x10569a0)
Block::initBlocks

0x1007d94c8(0x106a66c)
Block::playerDestroy

0x1007d8c98(0x106a080)
Block::popResource

0x1007d961c(0x106a73c)
Block::getSilkTouchItemInstance

0x1007d9678(0x106a76c)
Block::buildDescriptionName

0x1007d9738(0x106a8ca)
Block::setDestroyTime

0x1007d9728(0x106a8b8)
Block::setExplodeable

0x1007d987c(0x106a998)
Block::tryToPlace

0x1007d991c(0x106a9ee)
Block::checkIsPathable

0x1007d9944(0x106aa02)
Block::onRemove

0x1007d9998(0x106aa30)
Block::onFallOn

0x1007d9a1c(0x106aa82)
Block::getTypeToSpawn

0x1007d9b6c(0x106ab08)
Block::getMobToSpawn(BlockSource&, BlockPos const&) const
0x1007d9bc0(0x106ab3c)
Block::getMobToSpawn(BlockSource&, BlockPos const&, std::map<EntityType, int, std::less<EntityType>, std::allocator<std::pair<EntityType const, int> > >, bool&) const

0x1007d9d20(0x106abfa)
Block::isSolidBlockingBlock

0x1007d9d84(0x106ac30)
Block::isWaterBlocking

0x1007d9e58(0x106acc4)
Block::getVisualShape(BlockSource&, BlockPos const&, AABB&, bool)

0x1007d9eb0(0x106acec)
Block::getCollisionShape

0x1007d9fcc(0x106add0)
Block::lookupByName

0x1007da280(0x106b11c)
Block::getDebugText

0x1008c6e50(0x1150d60)
Material::getTranslucency

0x1008c6e74(0x1150d78)
Material::getMaterial

0x1008c6e28(0x1150d48)
Material::getBlocksMotion

0x1008c6e08(0x1150d34)
Material::isSolidBlocking

0x1008c6de8(0x1150d20)
Material::isType

0x1008c6e40(0x1150d58)
Material::isReplaceable

0x1008c6e48(0x1150d5c)
Material::isLiquid

0x1007994a0(0x10c1b46)
BlockSource::getLevel()

0x1007a9d24(0x10dd5b0)
Level::getRandom() const

0x1000ec430(0x7f6af4)
Random::genrand_int32

0x1008ebd48(0x1187f20)
AABB::AABB()

0x1008ec200(0x1188528)
AABB::translated

0x1008edaa8(0x118a59c)
AABB::isEmpty

0x1008ee0a8(0x118ade0)
Vec3::Vec3(BlockPos const&)

0x100710cb4(0xf98e90)
Player::getDestroySpeed

0x100710e04(0xf98ff4)
Player::canDestroy

0x10070f5c4(0xf979b4)
Player::getSelectedItem

0x10070f8b8(0xf97c1c)
Player::causeFoodExhaustion

0x10070f5d4(0xf979c2)
Player::useItem

0x10079971c(0x10c1cd0)
BlockSource::getBlock

0x10079a014(0x10c2358)
BlockSource::getBlockID

0x10079affc(0x10c2dec)
BlockSource::mayPlace

0x10079c3d8(0x10c3b90)
BlockSource::getEntities

0x10079bb6c(0x10c3644)
BlockSource::setBlockAndData(BlockPos const&, BlockID, unsigned char, int)
0x10079b854(0x10c33f8)
BlockSource::setBlockAndData(BlockPos const&, FullBlock, int, std::unique_ptr<BlockEntity, std::default_delete<BlockEntity> >)

0x10079975c(0x10c1d04)
BlockSource::getDimension()

0x10079d25c(0x10c2f74)
BlockSource::getMobsAt

0x10079f2cc(0x10c6654)
BlockSource::getBiome

0x10079f1f4(0x10c65de)
BlockSource::tryGetBiome

0x10079a858(0x10c2868)
BlockSource::getBrightness

0x10079a898(0x10c288c)
BlockSource::getRawBrightness

0x10079a0fc(0x10c23f0)
BlockSource::getData

0x1007994b0(0x10c1b4e)
BlockSource::checkBlockPermissions

0x100799564(0x10c1bd0)
BlockSource::_getBlockPermissions

0x100799660(0x10c1c6c)
BlockSource::hasBorderBlock

0x10079ecb8(0x10c620c)
BlockSource::canProvideSupport

0x1007aa608(0x10ddd82)
Level::getPlayers

0x1007aa8c0(0x10ddf56)
Level::getGameRules

0x1007aa8a8(0x10dd5f0)
Level::getAdventureSettings

0x1007a9334(0x10dc954)
Level::denyEffect

0x10065b818(0xf26266)
Entity::isRemoved

0x1008dded4(0x1175aac)
GameRules::getBool

0x1003845e0(0xb60c90)
BlockGraphics::initBlocks

0x100388338(0xb6c0d8)
BlockGraphics::BlockGraphics(std::string const&)

0x1003829c8(0xb5e480)
BlockGraphics::setTextureItem(std::string const&, std::string const&, std::string const&, std::string const&, std::string const&, std::string const&)

0x100382f0c(0xb5ee58)
BlockGraphics::setCarriedTextureItem(std::string const&, std::string const&, std::string const&)

0x10038365c(0xb5fc60)
BlockGraphics::setBlockShape(BlockGraphics&, Json::Value const&)

0x100384358(0xb60954)
BlockGraphics::setSoundType(BlockGraphics&, Json::Value const&)

0x100388ea0(0xb6cdf2)
BlockGraphics::getTexture(signed char)

0x10126a100(0x1c1cf28)
BlockGraphics::mBlocks

0x10004db54(0x163634e)
Json::Value::isNull

0x10004d538(0x1635e58)
Json::Value::asString

0x100381ca8(0xb5c388)
BlockSoundTypeFromString(std::string const&)//normal, gravel, wood, grass, metal, stone, cloth, glass, sand, snow, ladder, anvil, slime, silent, default

0x100798fc0(0x10c1888)
BlockPos::relative

0x10065be28(0xf26840)
Entity::getRotation

0x100757c50(0x102eecc)
ItemInstance::getEnchantsFromUserData

0x10049aeec(0xcde19e)
CompoundTag::contains(std::string const&, Tag::Type) const
0x10049bfd8(0xcde19e)
CompoundTag::contains(std::string const&, Tag::Type) const

0x10049b3d8(0xcde894)
CompoundTag::getList

0x100794860(0xffa84c)
ItemEnchants::ItemEnchants(int)

0x100794ed0(0xfface4)
ItemEnchants::addEnchants

0x100794e08(0xffac68)
ItemEnchants::addEnchant

0x100794c68(0xffab3c)
ItemEnchants::canEnchant

0x100794fa8(0xffad3e)
ItemEnchants::getAllEnchants

0x1007953c4(0xffb03a)
ItemEnchants::isEmpty

0x100795724(0xffb298)
ItemEnchants::_toList

0x100757cf4(0x102ef44)
ItemInstance::saveEnchantsToUserData

0x100794778(0xff8768)
EnchantmentInstance::getEnchantType

0x100794780(0xff8770)
EnchantmentInstance::getEnchantLevel

0x100794788(0xff8774)
EnchantmentInstance::setEnchantLevel

0x100791a7c(0xff9414)
EnchantUtils::determineActivation

0x100790de4(0xff8ce4)
EnchantUtils::applyEnchant(ItemInstance&, ItemEnchants const&)

0x10078de6c(0xff56b8)
Enchant::canEnchant(int) const

0x10078de40(0xff5664)
Enchant::isCompatibleWith

0x10049a40c(0xcdd4dc)
CompoundTag::CompoundTag()

0x10049ee8c(0xce2028)
Tag::Tag(std::string const&)

0x10049d76c(0xce0a0c)
ListTag::ListTag(std::string const&)
